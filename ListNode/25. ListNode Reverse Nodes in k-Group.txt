/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        ListNode dummy = new ListNode(-1);
        ListNode cur = dummy;
        dummy.next=head;
        while(true){
            ListNode ed = cur;
            for(int i=0;i<k;i++){
                ed=ed.next;
                if(ed==null) break;
            }
            if(ed==null) break;
            ListNode next = ed.next;
            ListNode st = cur.next;
            cur.next=null;
            ed.next=null;
            reverse(st);
            cur.next=ed;
            st.next=next;
            cur=st;
        }
        return dummy.next;
    }

    void reverse(ListNode cur){
        ListNode pre = null;
        while(cur!=null){
            ListNode temp = cur.next;
            cur.next=pre;
            pre=cur;
            cur=temp;
        }
    }
}