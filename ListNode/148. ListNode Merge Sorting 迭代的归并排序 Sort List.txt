/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode sortList(ListNode head) {
        if(head==null||head.next==null) return head;
        ListNode slow = head;
        ListNode fast = head.next; //注意这里找中点是head.next不是head
        while(fast!=null&&fast.next!=null){
            fast=fast.next.next; 
            slow=slow.next;
        }
        fast=slow.next;
        slow.next=null;
        ListNode left = sortList(head);
        ListNode right = sortList(fast);
        return merge(left,right);
    }

    ListNode merge(ListNode left,ListNode right){
        ListNode dummy = new ListNode(-1);
        ListNode cur = dummy;
        while(left!=null&&right!=null){
            if(left.val<=right.val){
                cur.next=left;
                left=left.next;
            }else{
                cur.next=right;
                right=right.next;
            }
            cur=cur.next;
        }
        if(left!=null) cur.next=left;
        else cur.next=right;

        return dummy.next;
    }
}