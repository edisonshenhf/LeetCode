//二分图的定义 把所有的点划分到两边
//使得集合内部没有边

//用来判断这个图是不是二分图
//一个图是二分图 当且仅当图中不含奇数环

//用染色法去判断这个图是不是二分图 
//如果染色过程中没有问题则为二分图
//如果有问题则不是

// 时间复杂度 O(m+n);

//n为点的个数 m为边的个数

class Solution {
    List<List<Integer>> g;
    int[] color;
    public boolean possibleBipartition(int n, int[][] dislikes) {
        g= new ArrayList<>();
        for(int i=0;i<=n;i++) g.add(new ArrayList<>());
        for(int[] dislike:dislikes){
            g.get(dislike[0]).add(dislike[1]);
            g.get(dislike[1]).add(dislike[0]);
        }
        color= new int[n+1];
        Arrays.fill(color,-1);

        for(int i=0;i<n;i++){
            if(color[i]==-1){
                if(!dfs(i,1)) return false;
            }
        }
        return true;
    }

    boolean dfs(int u,int c){
        color[u]=c;
        for(int ne:g.get(u)){
            if(color[ne]==-1){
                if(!dfs(ne,3-c)) return false;
            }else if(color[ne]==c) return false;
        }
        return true;
    }
}