class Solution {
    public String getHint(String secret, String guess) {
        String res = "";
        int n = secret.length();
        int a = 0;
        int b = 0;
        int[] listA = new int[10];
        int[] listB = new int[10];
        for(int i=0;i<n;i++){
            if(secret.charAt(i)==guess.charAt(i)){
                a++;
                continue;
            }
            listA[secret.charAt(i)-'0']++;
            listB[guess.charAt(i)-'0']++;
        }
        for(int i=0;i<10;i++){
            b+=Math.min(listA[i],listB[i]);
        }
        res=a+"A"+b+"B";
        return res;
    }
}

class Solution {
    public String getHint(String secret, String guess) {
        String res = "";
        int n = secret.length();
        HashMap<Integer,Integer> map = new HashMap<>();
        for(int i =0;i<n;i++){
            map.put(secret.charAt(i)-'0',map.getOrDefault(secret.charAt(i)-'0',0)+1);
        }
        int total=0;
        for(int i=0;i<n;i++){
            if(map.containsKey(guess.charAt(i)-'0')&&map.get(guess.charAt(i)-'0')>0){
                map.put(guess.charAt(i)-'0',map.get(guess.charAt(i)-'0')-1);
                total++;
            }
        }
        int bulls =0;
        for(int i=0;i<n;i++){
            if(secret.charAt(i)==guess.charAt(i)){
                bulls++;
            }
        }
        res=bulls+"A"+(total-bulls)+"B";
        return res;
    }
}