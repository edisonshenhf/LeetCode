/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public void reorderList(ListNode head) {
        if(head==null||head.next==null) return ;
        ListNode fast = head;
        ListNode slow = head;
        while(fast!=null&&fast.next!=null){
            fast=fast.next.next;
            slow=slow.next;
        }
        ListNode fs = head;
        ListNode ss = slow.next;
        slow.next=null;
        ListNode temp = reverse(ss);
        ListNode dummy = new ListNode(-1);
        ListNode res = dummy;
        while(fs!=null&&temp!=null){
            res=res.next=fs;
            fs=fs.next;
            res=res.next=temp;
            temp=temp.next;
        }
        if(fs!=null) res.next=fs;
        else res.next=temp;
        head=dummy.next;
    }

    ListNode reverse(ListNode head){
        ListNode cur = head;
        ListNode pre = null;
        while(cur!=null){
            ListNode temp = cur.next;
            cur.next=pre;
            pre=cur;
            cur=temp;
        }
        return pre;
    }
}