/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<TreeNode> list = new ArrayList<>();
    public void recoverTree(TreeNode root) {
        dfs(root);
        TreeNode a = null;
        TreeNode b = null;
        for(int i=0;i<list.size()-1;i++){
            if(list.get(i).val>list.get(i+1).val){
                b=list.get(i+1);
                if(a==null) a=list.get(i);
            }
        }
        int t = a.val;
        a.val=b.val;
        b.val=t;
    }
    void dfs(TreeNode root){
        if(root!=null){
            dfs(root.left);
            list.add(root);
            dfs(root.right);
        }
    }
}