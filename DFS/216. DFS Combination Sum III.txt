//确保唯一性一定要从小到大排列不能随意选

class Solution {
    List<List<Integer>> res;
    List<Integer> path;
    public List<List<Integer>> combinationSum3(int k, int n) {
        res= new ArrayList<>();
        path= new ArrayList<>();
        dfs(1,n,k);
        return res;
    }

    void dfs(int start,int n,int k){
        if(n==0){
            if(k==0){
                res.add(new ArrayList<>(path));
            }
        }else if(k>0){
            for(int i=start;i<=9;i++){
                if(n>=i){
                    path.add(i);
                    dfs(i+1,n-i,k-1);
                    path.remove(path.size()-1);
                }
            }
        }
    }
}