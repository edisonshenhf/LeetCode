class Solution {
    int[] nums;
    public void nextPermutation(int[] nums) {
        this.nums=nums;
        int n =nums.length;
        int k =n-2;
        while(k>=0&&nums[k]>=nums[k+1]) k--;
        if(k==-1){
            reverse(0,n-1);
        }else{
            int l=k+1;
            int r =n-1;
            while(l<r){
                int mid = l+r+1>>1;
                if(nums[mid]>nums[k]) l=mid;
                else r=mid-1;
            }
            swap(k,r);
            reverse(k+1,n-1);
        }
    }
    void reverse(int l,int r){
        while(l<r){
            int temp = nums[l];
            nums[l]=nums[r];
            nums[r]=temp;
            l++;r--;
        }
    }
    void swap(int l,int r){
        int temp = nums[l];
        nums[l]=nums[r];
        nums[r]=temp;
    }
}