//gcd算法
//GCD（get Greatest Common Divisor）获得最大公约数的方法

class Solution {
    int gcd(int a,int b){
        return b == 0 ? a : gcd(b, a % b);
    }
    public int maxPoints(int[][] points) {
        int res = 0;
        for(int i=0;i<points.length;i++){
            HashMap<String,Integer> map = new HashMap<>();
            int samepoint = 0;
            int vertical = 0;
            for(int j=i;j<points.length;j++){
                if(points[i][0]==points[j][0]&&points[i][1]==points[j][1]){
                    samepoint++;
                }else if(points[i][0]==points[j][0]){
                    vertical++;
                }else{
                    int a = points[i][1] - points[j][1];
                    int b = points[i][0] - points[j][0];
                    int c = gcd(a, b);
                    a /= c;
                    b /= c;
                    String t = a + "/" + b;
                    map.put(t, map.getOrDefault(t, 0) + 1);
                }
            }
            int max = vertical;
            for(Integer val:map.values()){
                max=Math.max(max,val);
            }
            max=Math.max(max,vertical);
            res=Math.max(res,max+samepoint);
        }
        return res;
    }
}