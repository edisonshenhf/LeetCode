class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        int n = nums.length ;
        int [] sum = new int [n + 1] ;
        for (int i = 1;  i <= n ; ++i) {
            sum[i] = (sum[i - 1] + nums[i - 1])  ;
        }
        HashMap<Integer,Integer> hash = new HashMap<>();
        hash.put(0, 1) ;
        int res = 0 ;
        for (int i = 1 ;i <= n ; ++i) {
            sum[i] = (sum[i] % k + k ) % k ;                          
        }

        for (int i = 1 ; i <= n ; ++i) {
            int t = sum[i] % k ;
            if (hash.containsKey(t)) {
                res += hash.get(t) ;
            }            
            int cnt = hash.getOrDefault(sum[i] % k ,0) + 1 ;
            hash.put(sum[i] % k , cnt) ;
        }
        return res;
    }
}