class WordDistance {
    Map<String,List<Integer>> map;
    public WordDistance(String[] wordsDict) {
        map = new HashMap<>();
        for(int i=0;i<wordsDict.length;i++){
            if(!map.containsKey(wordsDict[i])){
                map.put(wordsDict[i],new ArrayList<>());
            }
            map.get(wordsDict[i]).add(i);
        }
    }
    
    public int shortest(String word1, String word2) {
        int res = Integer.MAX_VALUE;
        List<Integer> temp1 = map.get(word1);
        List<Integer> temp2 = map.get(word2);
        int i =0, j=0;
        while(i<temp1.size()&&j<temp2.size()){
            res = Math.min(res,Math.abs(temp1.get(i)-temp2.get(j)));
            if(temp1.get(i)<temp2.get(j)) i++;
            else j++;
        }
        return res;
    }
}

/**
 * Your WordDistance object will be instantiated and called as such:
 * WordDistance obj = new WordDistance(wordsDict);
 * int param_1 = obj.shortest(word1,word2);
 */