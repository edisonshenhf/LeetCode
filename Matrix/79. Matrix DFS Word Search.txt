    class Solution {
        char[][] board;
        int n;
        int m;
        int[] dx = {-1,0,1,0};
        int[] dy = {0,1,0,-1};
        public boolean exist(char[][] board, String word) {
            this.board=board;
            n = board.length;
            m = board[0].length;
            for(int i=0;i<n;i++){
                for(int j=0;j<m;j++){
                    if(board[i][j]==word.charAt(0)){
                        if(dfs(i,j,0,word)) return true;
                    }
                }
            }
            return false;
        }

        boolean dfs(int i,int j,int u,String word){
            if(board[i][j]!=word.charAt(u)) return false;
            if(u==word.length()-1) return true;
            char c = board[i][j];
            board[i][j]='.';
            for(int k=0;k<4;k++){
                int x = i+ dx[k];
                int y = j+ dy[k];
                if(x<0||x>=n||y<0||y>=m||board[x][y]=='.') continue;
                if(dfs(x,y,u+1,word)) return true;
            }
            board[i][j]=c;
            return false;
        }
    }