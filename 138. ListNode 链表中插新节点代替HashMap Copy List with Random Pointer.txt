/*
// Definition for a Node.
class Node {
    int val;
    Node next;
    Node random;

    public Node(int val) {
        this.val = val;
        this.next = null;
        this.random = null;
    }
}
*/

class Solution {
    public Node copyRandomList(Node head) {
        if(head==null) return head;

        for(Node p=head;p!=null;p=p.next.next){
            Node q = new Node(p.val);
            q.next=p.next;
            p.next=q;
        }
        for(Node p=head;p!=null;p=p.next.next){
            Node q = p.next;
            if(p.random!=null){
                q.random=p.random.next;
            }
        }
        Node dummy = new Node(-1);
        Node cur = dummy;
        for(Node p=head;p!=null;p=p.next){
            cur=cur.next=p.next;
            p.next=p.next.next;
        }
        return dummy.next;
    }
}