class Solution {
    boolean[] st = new boolean[4];
    int res = -1;
    int[] arr;
    public String largestTimeFromDigits(int[] arr) {
        this.arr=arr;
        for(int i=0;i<4;i++){
            dfs(0,0);
        }
        if (res == -1) {
            return "";
        }
        String h = (res / 100) + "";
        String m = (res % 100) + "";
        if (h.length() == 1) {
            h = "0" + h;
        }
        if (m.length() == 1) {
            m = "0" + m;
        }
        return h + ":" + m;
    }

    void dfs(int num,int u){
        if(u==4){
            int h = num/100;
            int m = num%100;
            if(h>=0&&h<=23&&m>=0&&m<=59){
                res=Math.max(res,num);
            }
            return;
        }

        for(int i=0;i<4;i++){
            if(!st[i]){
                st[i]=true;
                num=num*10+arr[i];
                dfs(num,u+1);
                st[i]=false;
                num/=10;
            }
        }
    }
}