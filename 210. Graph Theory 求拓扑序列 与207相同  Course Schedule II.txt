//参考207

class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        if(numCourses==1) return new int[1];
        List<List<Integer>> list = new ArrayList<>();
        int[] d = new int[numCourses];
        int[] res = new int[numCourses];
        for(int i=0;i<numCourses;i++){
            list.add(new ArrayList<>());
        }
        for(int[] pre:prerequisites){
            int b = pre[0];
            int a = pre[1];
            list.get(a).add(b);
            d[b]++;
        }
        Queue<Integer> queue = new LinkedList<>();
        int cnt = 0;
        for(int i=0;i<numCourses;i++){
            if(d[i]==0){
                res[cnt++]=i;
                queue.offer(i);
            }
        }
        while(queue.size()!=0){
            int t = queue.poll();
            for(int b:list.get(t)){
                if(--d[b]==0){
                    queue.offer(b);
                    res[cnt++]=b;
                }
            }
        }
        if(cnt==numCourses) return res;
        else return new int[0];
    }
}