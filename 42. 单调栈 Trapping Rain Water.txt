class Solution {
    public int trap(int[] height) {
        int n =height.length;
        Stack<Integer> stack = new Stack<>();
        int res =0;
        for(int i=0;i<n;i++){
            int last = 0;
            while(!stack.isEmpty()&&height[stack.peek()]<=height[i]){
                res+=(height[stack.peek()]-last)*(i-stack.peek()-1);
                last = height[stack.peek()];
                stack.pop();
            }
            if(!stack.isEmpty()) res+=(height[i]-last)*(i-stack.peek()-1);
            stack.push(i);
        }
        return res;
    }
}