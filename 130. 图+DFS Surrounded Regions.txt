class Solution {
    int[] dx = {-1,0,1,0};
    int[] dy = {0,1,0,-1};
    int n;
    int m;
    public void solve(char[][] board) {
        n = board.length;
        m = board[0].length;
        for(int i=0;i<n;i++){
            if(board[i][0]=='O') dfs(i,0,board);
            if(board[i][m-1]=='O') dfs(i,m-1,board);
         }
        for(int j=0;j<m;j++){
            if(board[0][j]=='O') dfs(0,j,board);
            if(board[n-1][j]=='O') dfs(n-1,j,board);
        }
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]=='.') board[i][j]='O';
                else if(board[i][j]=='O') board[i][j]='X';
            }
        }
    }

    void dfs(int i,int j,char[][] board){
        board[i][j]='.';
        for(int k=0;k<4;k++){
            int x = i+ dx[k];
            int y = j+ dy[k];
            if(x>=0&&x<n&&y>=0&&y<m&&board[x][y]=='O'){
                dfs(x,y,board);
            }
        }
    }
}