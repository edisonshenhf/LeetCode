//动态规划

class Solution {
    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int[] f = new int[n];
        Arrays.fill(f,1);
        int res =1;
        for(int i=1;i<n;i++){
            for(int j=0;j<i;j++){
                if(nums[j]<nums[i]){
                    f[i]=Math.max(f[i],f[j]+1);
                }
            }
            res = Math.max(res,f[i]);
        }
        return res;
    }
}

//最佳解法nlogn
class Solution {
    public int lengthOfLIS(int[] nums) {
        int n = nums.length;
        int max = 1;
        int[] list = new int[n+1];
        list[1]=nums[0];
        for(int num:nums){
            if(num>list[max]){
                max++;
                list[max]=num;
            }else{
                int r =max;
                int l =1;
                while(l<r){
                    int mid = l+r>>1;
                    if(list[mid]>=num)r=mid;
                    else l=mid+1;
                }
                list[l]=num;
            }
        }
        return max;
    }
}