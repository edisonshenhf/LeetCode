//线性dp

class Solution {
    public int minFallingPathSum(int[][] matrix) {
        int n = matrix.length;
        int m = matrix[0].length;
        if(n==1){
            int res = Integer.MAX_VALUE;
            for(int i=0;i<m;i++){
                res=Math.min(res,matrix[n-1][i]);
            }
            return res;
        }
        int[][] f = new int[n][m];
        for(int i=0;i<m;i++){
            f[n-1][i]=matrix[n-1][i];
        }
        for(int i=n-2;i>=0;i--){
            for(int j=0;j<m;j++){
                f[i][j]=matrix[i][j]+Math.min(f[i+1][Math.max(j-1,0)],Math.min(f[i+1][j],f[i+1][Math.min(j+1,m-1)]));
            }
        }
        int res = Integer.MAX_VALUE;
        for(int i=0;i<m;i++){
            res=Math.min(res,f[0][i]);
        }
        return res;
    }
}