/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res = 1;
    public int longestConsecutive(TreeNode root) {
        dfs(root,Integer.MIN_VALUE,1);
        return res;
    }

    void dfs(TreeNode root,int prev,int cnt){
        if(root==null) return;
        if(root.val==prev+1){
            cnt++;
            res=Math.max(res,cnt);
        }else{
            cnt=1;
        }
        dfs(root.left,root.val,cnt);
        dfs(root.right,root.val,cnt);
    }
}