/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    double dif = (double)2e9;
    int res;
    public int closestValue(TreeNode root, double target) {
        res = root.val;
        dfs(root,target);
        return res;
    }

    void dfs(TreeNode root,double target){
        if(root==null) return;

        if(dif>Math.abs(root.val-target)){
            res=root.val;
            dif=Math.abs(root.val-target);
        }

        if(root.val>target) dfs(root.left,target);
        else dfs(root.right,target);
    }
}