/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<String> res = new ArrayList<>();
    public List<String> binaryTreePaths(TreeNode root) {
        dfs(root,""+root.val);
        return res;
    }
    
    void dfs(TreeNode root,String s){
        if(root==null) return;
        if(root.left==null&&root.right==null){
            res.add(s);
            return;
        }
        if(root.left!=null) dfs(root.left,s+"->"+root.left.val);
        if(root.right!=null) dfs(root.right,s+"->"+root.right.val);
    }
}