class Solution {
    public List<Integer> findSubstring(String s, String[] words) {
        List<Integer> res = new ArrayList<>();
        if(words.length==0) return res;
        HashMap<String,Integer> map = new HashMap<>();
        for(String word : words)
        {
            map.put(word,map.getOrDefault(word,0) + 1);
        }
        int n = words.length;
        int len = words[0].length();

        HashMap<String, Integer> find = new HashMap<>();
        for(int i=0;i<=s.length()-n*len;i++){
            find.clear();
            int j =0;
            while(j<n){
                String t = s.substring(i+j*len,i+j*len+len);
                if(map.containsKey(t)){
                    find.put(t,find.getOrDefault(t,0)+1);
                    if(find.get(t)>map.get(t)) break;
                }else break;
                j++;
            }
            if(j==n) res.add(i);
        }
        return res;
    }
}