/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> res= new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        dfs(root,0,targetSum,new ArrayList<>());
        return res;
    }

    void dfs(TreeNode root,int sum,int targetSum,List<Integer> list){
        if(root==null) return;
        list.add(root.val);
        sum+=root.val;
        if(root.left==null&&root.right==null&&sum==targetSum){
            res.add(new ArrayList<>(list));
        }
        dfs(root.left,sum,targetSum,list);
        dfs(root.right,sum,targetSum,list);
        sum-=root.val;
        list.remove(list.size()-1);
    }
}